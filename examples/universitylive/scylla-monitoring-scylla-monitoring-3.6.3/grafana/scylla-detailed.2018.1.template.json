{
    "dashboard": {
        "class": "dashboard",
        "uid": "detail-2018-1",
        "rows": [
            {
                "class": "logo_row"
            },
            {
                "class": "row",
                "height": "150px",
                "panels": [
                    {
                        "class": "single_stat_panel",
                        "targets": [
                            {
                                "expr": "count(up{job=\"scylla\", cluster=~\"$cluster|$^\"})",
                                "intervalFactor": 1,
                                "legendFormat": "Total Nodes",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Total Nodes"
                    },
                    {
                        "class": "single_stat_panel_fail",
                        "targets": [
                            {
                                "expr": "count(scrape_samples_scraped{job=\"scylla\", cluster=~\"$cluster|$^\"}==0) OR vector(0)",
                                "intervalFactor": 1,
                                "legendFormat": "Unreachable",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "thresholds": "1,2",
                        "title": "Unreachable"
                    },
                    {
                        "class": "text_panel",
                        "content": "##  ",
                        "mode": "markdown",
                        "span": 3,
                        "style": {}
                    },
                    {
                        "class": "ops_panel",
                        "bars": true,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_transport_requests_served{cluster=~\"$cluster|$^\"}[60s])) + sum(irate(scylla_thrift_served{cluster=~\"$cluster|$^\"}[60s]))",
                                "intervalFactor": 1,
                                "legendFormat": "Total Requests",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Total Requests"
                    },
                    {
                        "class": "dashlist",
                        "tags": [
                        	"2018.1"
		                ]
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "panels": [
                    {
                        "class": "percent_panel",
                        "targets": [
                            {
                                "expr": "avg(scylla_reactor_utilization{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"} ) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Load per [[by]]"
                    },
                    {
                        "class": "ops_panel",
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_transport_requests_served{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]]) + sum(irate(scylla_thrift_served{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "metric": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Requests Served per [[by]]"
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "height": "25px",
                "gridPos": {"h": 2},
                "panels": [
                    {
                        "class": "text_header_panel",
                        "content": "<h1 style=\"color:#5881c2; border-bottom: 3px solid #5881c2;\">Reads and Writes</h1>"
                    },
                    {
                        "class": "text_header_panel",
                        "content": "<h1 style=\"color:#5881c2; border-bottom: 3px solid #5881c2;\">Timeouts and Errors</h1>"
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "height": "200px",
                "panels": [
                    {
                        "class": "graph_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(scylla_storage_proxy_coordinator_foreground_writes{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "description": "Foreground writes are writes that weren't acknowledged yet to the application. For instance, if a single replica responded and two are needed due to the consistency level. This metric represents a queue size, not a rate. High values here correlate with increased write latencies.",
                        "title": "Foreground Writes per [[by]]"
                    },
                    {
                        "class": "graph_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(scylla_storage_proxy_coordinator_foreground_reads{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "metric": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "description": "Foreground reads are reads that weren't acknowledged yet to the application. For instance, if a single replica responded and two are needed due to the consistency level. This metric represents a queue size, not a rate. High values here correlate with increased read latencies.",
                        "title": "Foreground Reads per [[by]]"
                    },
                    {
                        "class": "wpm_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(delta(scylla_storage_proxy_coordinator_write_timeouts{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[1m])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "description": "Requests that Scylla tried to write but timed out. Timeouts are counted in the node that received the request (the coordinator), not at the replicas.",
                        "title": "Write Timeouts/Minutes per [[by]]"
                    },
                    {
                        "class": "wpm_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(delta(scylla_storage_proxy_coordinator_write_unavailable{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[1m])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "description": "Requests that Scylla did not even try to write because replicas that were needed to execute this write were unavailable. Unavailable writes are counted in the node that received the request (the coordinator), not at the replicas.",
                        "title": "Write Unavailable/Minute per [[by]]"
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "height": "200px",
                "panels": [
                    {
                        "class": "graph_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(scylla_storage_proxy_coordinator_background_writes{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "description": "Background writes are writes that are already acknowledged to the application but have additional work to be done. For instance, if a replica responded and only one is needed, this request is still listed as a background request until all replicas respond. This metric represents a queue size, not a rate. High values here correlate with increased write latencies.",
                        "title": "Background Writes per [[by]]"
                    },
                    {
                        "class": "graph_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(scylla_storage_proxy_coordinator_background_reads{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 4
                            }
                        ],
                        "description": "Background reads are reads that are already acknowledged to the application but have additional work to be done. For instance, if a replica responded and only one is needed, this request is still listed as a background request until all replicas respond. This metric represents a queue size, not a rate. High values here correlate with increased read latencies.",
                        "title": "Background Reads per [[by]]"
                    },
                    {
                        "class": "rpm_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(delta(scylla_storage_proxy_coordinator_read_timeouts{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[1m])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "description": "Requests that Scylla tried to read but timed out. Timeouts are counted in the node that received the request (the coordinator), not at the replicas.",
                        "title": "Read Timeouts/Minutes per [[by]]"
                    },
                    {
                        "class": "rpm_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(delta(scylla_storage_proxy_coordinator_read_unavailable{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[1m])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "metric": "",
                                "refId": "A",
                                "step": 4
                            }
                        ],
                        "description": "Requests that Scylla did not even try to read because replicas that were needed to execute this write were unavailable. Unavailable reads are counted in the node that received the request (the coordinator), not at the replicas.",
                        "title": "Read Unavailable/Minutes per [[by]]"
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "gridPos": {"h": 2},
                "panels": [
                    {
                        "class": "plain_text",
                        "content": "<h1 style=\"color:#5881c2; border-bottom: 3px solid #5881c2;\">Replica</h1>"
                    }
                 ]
            },
            {
                "class": "row",
                "height": "auto",
                "panels": [
                    {
                        "class": "rps_panel",
                        "span": 6,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_database_total_reads{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Reads"
                    },
                    {
                        "class": "wps_panel",
                        "span": 6,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_database_total_writes{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "metric": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Writes"
                    },
                    {
                        "class": "graph_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(scylla_database_active_reads{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Active sstable reads"
                    },
                    {
                        "class": "graph_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(scylla_database_queued_reads{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Queued sstable reads"
                    },
                    {
                        "class": "graph_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(scylla_database_requests_blocked_memory_current{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Writes currently blocked on dirty"
                    },
                    {
                        "class": "graph_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(scylla_commitlog_pending_allocations{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Writes currently blocked on commitlog"
                    },
                    {
                        "class": "text_panel",
                        "content": "",
                        "mode": "markdown",
                        "span": 3
                    },
                    {
                        "class": "rps_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_database_total_reads_failed{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Reads failed"
                    },
                    {
                        "class": "wps_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_database_requests_blocked_memory{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Writes blocked on dirty"
                    },
                    {
                        "class": "wps_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_commitlog_requests_blocked_memory{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Writes blocked on commitlog"
                    },
                    {
                        "class": "text_panel",
                        "content": "",
                        "mode": "markdown",
                        "span": 3
                    },
                    {
                        "class": "text_panel",
                        "content": "",
                        "mode": "markdown",
                        "span": 3
                    },
                    {
                        "class": "wps_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_database_total_writes_failed{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Writes failed"
                    },
                    {
                        "class": "wps_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_database_total_writes_timedout{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Writes timed out"
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "height": "25px",
                "panels": [
                    {
                        "class": "text_panel",
                        "content": "<h1 style=\"color:#5881c2; border-bottom: 3px solid #5881c2;\">Cache</h1>",
                        "style": {}
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "panels": [
                    {
                        "class": "rps_panel",
                        "span": 6,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cache_reads{instance=~\"[[node]]\", shard=~\"[[shard]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\"}[60s]) - irate(scylla_cache_reads_with_misses{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Reads with no misses"
                    },
                    {
                        "class": "rps_panel",
                        "span": 6,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cache_reads_with_misses{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Reads with misses"
                    }
                ]
            },
            {
                "class" : "row",
                "panels": [
                    {
                        "class": "rps_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cache_row_hits{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Row Hits"
                    },
                    {
                        "class": "rps_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cache_partition_hits{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Partition Hits"
                    },
                    {
                        "class": "rps_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cache_row_misses{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Row Misses"
                    },
                    {
                        "class": "rps_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cache_partition_misses{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Partition Misses"
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "panels": [
                    {
                        "class": "rps_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cache_row_insertions{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Row Insertions"
                    },
                    {
                        "class": "rps_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cache_partition_insertions{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Partition Insertions"
                    },
                    {
                        "class": "ops_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cache_partition_evictions{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Partition Evictions"
                    }
                ]
            },
            {
                "class": "row",
                "panels": [
                    {
                        "class": "ops_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cache_partition_merges{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Partition Merges"
                    },
                    {
                        "class": "ops_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cache_partition_removals{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[60s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Partition Removals"
                    }
                ]
            },
            {
                "class": "row",
                "panels": [
                    {
                        "class": "graph_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(scylla_cache_partitions{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Partitions"
                    },
                    {
                        "class": "bytes_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(scylla_cache_bytes_used{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Used Bytes"
                    },
                    {
                        "class": "bytes_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(scylla_cache_bytes_total{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Total Bytes"
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "height": "25px",
                "gridPos": {"h": 2},
                "panels": [
                    {
                        "class": "text_panel",
                        "content": "<h1 style=\"color:#5881c2; border-bottom: 3px solid #5881c2;\">Memory</h1>",
                        "style": {}
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "panels": [
                    {
                        "class": "bytes_panel",
                        "span": 4,
                        "targets": [
                            {
                                "expr": "sum(scylla_lsa_total_space_bytes{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "LSA total memory"
                    },
                    {
                        "class": "bytes_panel",
                        "span": 4,
                        "targets": [
                            {
                                "expr": "sum(scylla_lsa_non_lsa_used_space_bytes{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Non-LSA used memory"
                    },
                    {
                        "class": "percent_panel",
                        "span": 4,
                        "targets": [
                            {
                                "expr": "avg(scylla_in_memory_store_used_memory{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}/scylla_in_memory_store_total_memory{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "description": "This panel indicates how full the in memory is. Check the documentation to learn more about in memory storage",
                        "title": "In-memory storage usage"
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "height": "25px",
                "gridPos": {"h": 2},
                "panels": [
                    {
                        "class": "text_panel",
                        "content": "<h1 style=\"color:#5881c2; border-bottom: 3px solid #5881c2;\">Compaction</h1>",
                        "style": {}
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "panels": [
                    {
                        "class": "graph_panel",
                        "span": 12,
                        "targets": [
                            {
                                "expr": "sum(scylla_compaction_manager_compactions{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "metric": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "Running Compactions"
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "height": "25px",
                "panels": [
                    {
                        "class": "text_panel",
                        "content": "<h1 style=\"color:#5881c2; border-bottom: 3px solid #5881c2;\">CQL</h1>",
                        "style": {}
                    }
                ],
                "title": "New row"
            },
            {
                "class": "row",
                "panels": [
                    {
                        "class": "ops_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cql_inserts{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[300s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "metric": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "CQL Insert"
                    },
                    {
                        "class": "ops_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cql_reads{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[300s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "metric": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "CQL Reads"
                    },
                    {
                        "class": "ops_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cql_deletes{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[300s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "metric": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "CQL Deletes"
                    },
                    {
                        "class": "ops_panel",
                        "span": 3,
                        "targets": [
                            {
                                "expr": "sum(irate(scylla_cql_updates{instance=~\"[[node]]\",cluster=~\"$cluster|$^\", dc=~\"$dc\", shard=~\"[[shard]]\"}[300s])) by ([[by]])",
                                "intervalFactor": 1,
                                "legendFormat": "",
                                "metric": "",
                                "refId": "A",
                                "step": 1
                            }
                        ],
                        "title": "CQL Updates"
                    }
                ],
                "title": "New row"
            }
        ],
        "templating": {
            "list": [
                {
                    "allValue": null,
                    "current": {
                        "tags": [],
                        "text": "Instance",
                        "value": "instance"
                    },
                    "hide": 0,
                    "includeAll": false,
                    "label": "by",
                    "multi": false,
                    "name": "by",
                    "options": [
                        {
                            "selected": false,
                            "text": "Cluster",
                            "value": "cluster"
                        },
                        {
                            "selected": false,
                            "text": "DC",
                            "value": "dc"
                        },
                        {
                            "selected": true,
                            "text": "Instance",
                            "value": "instance"
                        },
                        {
                            "selected": false,
                            "text": "Shard",
                            "value": "shard"
                        }
                    ],
                    "query": "Cluster,DC,Instance,Shard",
                    "type": "custom"
                },
                {
                    "class": "template_variable_single",
                    "label": "cluster",
                    "name": "cluster",
                    "query": "label_values(scylla_reactor_utilization, cluster)"
                },
                {
                    "class": "template_variable_all",
                    "label": "dc",
                    "name": "dc",
                    "query": "label_values(scylla_reactor_utilization{cluster=~\"$cluster\"}, dc)"
                },
                {
                    "class": "template_variable_all",
                    "label": "node",
                    "name": "node",
                    "query": "label_values(scylla_reactor_utilization{cluster=~\"$cluster|$^\", dc=~\"$dc\"}, instance)"
                },
                {
                    "class": "template_variable_all",
                    "label": "shard",
                    "name": "shard",
                    "query": "label_values(scylla_reactor_utilization,shard)",
                    "sort": 3
                },
                {
                    "class": "template_variable_custom",
                    "current": {
                        "text": "2018.1",
                        "value": "2018.1"
                    },
                    "name": "scylla_dash_version",
                    "options": [
                        {
                            "selected": true,
                            "text": "2018.1",
                            "value": "2018.1"
                        }
                    ],
                    "query": "2018.1"
                },
                {
                    "class": "monitor_version_var"
                }
            ]
        },
		"tags": [
			"2018.1"
		],
        "time": {
            "from": "now-30m",
            "to": "now"
        },
        "title": "Scylla Per Server Metrics",
        "version": 5
    }
}
