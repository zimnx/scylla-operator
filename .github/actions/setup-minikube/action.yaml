name: "Setup Minikube"
description: 'Installs minikube Kubernetes cluster'
runs:
  using: "composite"
  steps:
  - name: Install minikube
    shell: bash
    run: |
      set -x
      sudo apt-get install -y --no-install-recommends conntrack
      sudo curl -s --fail -L https://storage.googleapis.com/minikube/releases/v1.23.0/minikube-linux-amd64 -o /usr/local/bin/minikube
      sudo chmod +x /usr/local/bin/minikube

      sudo curl -s --fail -L "https://dl.k8s.io/release/v1.22.2/bin/linux/amd64/kubectl" -o /usr/local/bin/kubectl
      sudo chmod +x /usr/local/bin/kubectl
      sudo curl -s --fail -L https://github.com/kubernetes-sigs/cri-tools/releases/download/v1.22.0/crictl-v1.22.0-linux-amd64.tar.gz | tar -f - -xz -C /usr/local/bin crictl
  - name: Configure minikube
    shell: bash
    run: |
      set -x
      sudo minikube config set driver none
      sudo minikube config set EmbedCerts true
      sudo ip link set docker0 promisc on
  - name: Start minikube
    shell: bash
    run: |
      set -euEx -o pipefail

      # Hack /etc/ssl/certs/ as it's passed down to the KAS static pod.
      cat << EOF | sudo tee /etc/ssl/certs/audit-policy.yaml > /dev/null
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
      - level: RequestResponse
      EOF

      sudo minikube start --wait=all --extra-config='apiserver.event-ttl=24h' --extra-config='apiserver.audit-policy-file=/etc/ssl/certs/audit-policy.yaml' --extra-config='apiserver.audit-log-path=/var/log/kube-apiserver-audit.log'

      mkdir -p ~/.kube/
      sudo cat /root/.kube/config > ~/.kube/config
      sudo minikube version
      kubectl version

      # We can't hack an existing dir for logs because they are read only.
      sudo $( which yq ) -i e '.spec.volumes += {"name": "logs","hostPath": {"path": "/var/log"}} | .spec.containers[0].volumeMounts += {"name": "logs", "mountPath": "/var/log"}' /etc/kubernetes/manifests/kube-apiserver.yaml

      # We need to wait for the apiserver to be restarted.
      until sudo test -f /var/log/kube-apiserver-audit.log; do
        echo 'Waiting for /var/log/kube-apiserver-audit.log to be created.'
        sleep 1;
      done

      until kubectl get namespace kube-system 2>/dev/null 1>&2; do
        echo 'Waiting for apiserver to come up.'
        sleep 1
      done

      kubectl -n kube-system rollout status --timeout=5m deployment.apps/coredns

      kubectl label node/minikube scylla.scylladb.com/node-type=scylla
